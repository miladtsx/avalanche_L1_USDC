"use strict";(self.webpackChunkava_pay=self.webpackChunkava_pay||[]).push([[98434],{98434:(e,t,n)=>{n.d(t,{upload:()=>d});var r=n(966),i=n(77717),a=n(16406),s=n(86475);function o(e){return globalThis.File&&e instanceof File}function f(e){return!!e&&(!!(0,a.C)(e,["data","name"])&&!("string"!==typeof e.name||"string"!==typeof e.data&&!(0,s.mg)(e.data)))}function l(e,t){if(o(e)&&o(t)){if(e.name===t.name&&e.lastModified===t.lastModified&&e.size===t.size)return!0}else{if((0,s.mg)(e)&&(0,s.mg)(t))return(0,s.tv)(e,t);if(f(e)&&f(t)&&e.name===t.name){if("string"===typeof e.data&&"string"===typeof t.data)return e.data===t.data;if((0,s.mg)(e.data)&&(0,s.mg)(t.data))return(0,s.tv)(e.data,t.data)}}return!1}function u(e){return o(e)||(0,s.mg)(e)||f(e)}function p(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];if(u(e))return t.push(e),t;if("object"===typeof e){if(!e)return t;if(Array.isArray(e))for(const n of e)p(n,t);else Object.keys(e).map((n=>p(e[n],t)))}return t}function m(e,t){if(u(e)){if(t.length)return t.shift();console.warn("Not enough URIs to replace all files in object.")}return"object"===typeof e&&e?Array.isArray(e)?e.map((e=>m(e,t))):Object.fromEntries(Object.entries(e).map((e=>{let[n,r]=e;return[n,m(r,t)]}))):e}function c(e){return"string"===typeof e?function(e){if(e.includes("/ipfs/"))return`ipfs://${e.split("/ipfs/")[1]}`;return e}(e):"object"===typeof e&&e?u(e)?e:Array.isArray(e)?e.map((e=>c(e))):Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,c(n)]}))):e}async function d(e){if(0===e.files.length)return null;let t;if(e.files.map((e=>u(e)||"string"===typeof e)).every((e=>!!e)))t=e.files;else{let n=e.files;n=c(n);const r=p(n);if(r.length){const t=await d({...e,files:r});n=m(n,Array.isArray(t)?t:[t])}t=n.map((e=>"string"===typeof e?e:(0,i.A)(e)))}const a=new FormData,{fileNames:s,form:y}=function(e,t,n){const r=new Map,i=[];for(let s=0;s<t.length;s++){const a=t[s];let u="",p=a;if(o(a))if(n?.rewriteFileNames){let e="";if(a.name){const t=a.name.lastIndexOf(".");t>-1&&(e=a.name.substring(t))}u=`${s+n.rewriteFileNames.fileStartNumber}${e}`}else u=`${a.name}`;else f(a)?(p=a.data,u=n?.rewriteFileNames?`${s+n.rewriteFileNames.fileStartNumber}`:`${a.name}`):u=n?.rewriteFileNames?`${s+n.rewriteFileNames.fileStartNumber}`:`${s}`;const m=n?.uploadWithoutDirectory?"files":`files/${u}`;if(r.has(u)){if(l(r.get(u),a)){i.push(u);continue}throw new Error(`[DUPLICATE_FILE_NAME_ERROR] File name ${u} was passed for more than one different file.`)}r.set(u,a),i.push(u),e.append("file",new Blob([p]),m)}const a={name:"Storage SDK",keyvalues:{...n?.metadata}};return e.append("pinataMetadata",JSON.stringify(a)),n?.uploadWithoutDirectory&&e.append("pinataOptions",JSON.stringify({wrapWithDirectory:!1})),{form:e,fileNames:i.map((e=>encodeURIComponent(e)))}}(a,t,e),g=(0,r.l)();if("browser"===g||"node"===g){const{uploadBatch:t}=await n.e(20176).then(n.bind(n,20176)),r=await t(e.client,y,s,e);return 1===e.files.length?r[0]:r}throw new Error("Please, use the uploadMobile function in mobile environments.")}}}]);
//# sourceMappingURL=98434.2c86c981.chunk.js.map